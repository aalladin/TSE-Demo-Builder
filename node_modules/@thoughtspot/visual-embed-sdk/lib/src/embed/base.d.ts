import { EmbedConfig } from '../types';
export declare let authPromise: Promise<void>;
/**
 * Perform authentication on the ThoughtSpot app as applicable.
 */
export declare const handleAuth: () => Promise<void>;
export declare const getEmbedConfig: () => EmbedConfig;
export declare const getAuthPromise: () => Promise<void>;
/**
 * Prefetches static resources from the specified URL. Web browsers can then cache the prefetched resources and serve them from the user's local disk to provide faster access to your app.
 * @param url The URL provided for prefetch
 */
export declare const prefetch: (url?: string) => void;
/**
 * Initialize the ThoughtSpot embed SDK globally and perform
 * authentication if applicable.
 * @param embedConfig The configuration object containing ThoughtSpot host,
 * authentication mechanism and so on.
 *
 * @returns authPromise Promise which resolves when authentication is complete.
 */
export declare const init: (embedConfig: EmbedConfig) => Promise<void>;
/**
 * Renders functions in a queue, resolves to next function only after the callback next is called
 * @param fn The function being registered
 */
export declare const renderInQueue: (fn: (next?: (val?: any) => void) => void) => void;
