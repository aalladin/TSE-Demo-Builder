{"ast":null,"code":"var _jsxFileName = \"/Users/nathan.schroeder/Documents/dev/ts-integration-demo/src/ClientWebsite.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClientWebsite(props) {\n  _s();\n\n  const {\n    url\n  } = props;\n  useEffect(() => {\n    fetch(\"https://crossorigin.me/\" + url, {\n      method: 'GET',\n      mode: 'cors'\n    }).then(response => response.text()).then(data => {\n      document.getElementById(\"clientSite\").innerHTML = data;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"clientSite\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClientWebsite, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ClientWebsite;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientWebsite\");","map":{"version":3,"sources":["/Users/nathan.schroeder/Documents/dev/ts-integration-demo/src/ClientWebsite.js"],"names":["useState","useEffect","useRef","ClientWebsite","props","url","fetch","method","mode","then","response","text","data","document","getElementById","innerHTML"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,EAA4BC,MAA5B,QAA0C,OAA1C;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AACxC,QAAM;AACFC,IAAAA;AADE,MAEFD,KAFJ;AAGAH,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,KAAK,CAAC,4BAA0BD,GAA3B,EAA+B;AAACE,MAAAA,MAAM,EAAC,KAAR;AAAcC,MAAAA,IAAI,EAAC;AAAnB,KAA/B,CAAL,CAAgEC,IAAhE,CAAqEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAjF,EAAkGF,IAAlG,CAAuGG,IAAI,IAAI;AAC3GC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkDH,IAAlD;AACH,KAFD;AAGH,GAJQ,EAIP,EAJO,CAAT;AAKA,sBACI;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAduBT,a;;KAAAA,a","sourcesContent":["import { useState,useEffect,useRef } from \"react\";\n\nexport default function ClientWebsite(props){\n    const {\n        url \n    } = props\n    useEffect(()=>{\n        fetch(\"https://crossorigin.me/\"+url,{method:'GET',mode:'cors'}).then(response => response.text()).then(data => {\n            document.getElementById(\"clientSite\").innerHTML = data\n        })\n    },[])\n    return (\n        <div id=\"clientSite\">\n            \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}