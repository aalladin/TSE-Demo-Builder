{"ast":null,"code":"var _jsxFileName = \"/Users/nathan.schroeder/Documents/dev/TSIntegrationDemo/ts-integration-demo/src/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport Editor from './Editor';\nimport Configuration from './Helpers';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { init, AuthType } from '@thoughtspot/visual-embed-sdk';\nimport { SearchEmbed } from '@thoughtspot/visual-embed-sdk/react';\nimport { SketchPicker } from 'react-color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SettingsMenu() {\n  _s();\n\n  const [URL, setURL] = useState('');\n  const [links, setLinks] = useState('');\n  const [primaryColor, setPrimaryColor] = useState('');\n  const [secondaryColor, setSecondaryColor] = useState('');\n  const [orientation, setOrientation] = useState('');\n  const [logoImage, setLogoImage] = useState('');\n  const thoughtspot_URL = \"https://se-thoughtspot-cloud.thoughtspot.cloud/\";\n\n  updatePrimaryColor = color => {\n    setPrimaryColor(color.hex);\n  };\n\n  updateSecondaryColor = color => {\n    setPrimaryColor(color.hex);\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: URL,\n      onChange: e => setURL(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: URL,\n      onChange: e => setURL(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n      color: primaryColor,\n      onChangeComplete: updatePrimaryColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n      color: primaryColor,\n      onChangeComplete: updateSecondaryColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: URL,\n      onChange: e => setURL(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SettingsMenu, \"JYzfiOkpqtg2DlcOK2dpKwDRn7c=\");\n\n_c = SettingsMenu;\n\nfunction Link() {}\n\n_c2 = Link;\nexport default SettingsMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SettingsMenu\");\n$RefreshReg$(_c2, \"Link\");","map":{"version":3,"sources":["/Users/nathan.schroeder/Documents/dev/TSIntegrationDemo/ts-integration-demo/src/Settings.js"],"names":["React","useState","useEffect","setState","Editor","Configuration","FontAwesomeIcon","faTimes","faCheck","ToastContainer","toast","init","AuthType","SearchEmbed","SketchPicker","SettingsMenu","URL","setURL","links","setLinks","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","orientation","setOrientation","logoImage","setLogoImage","thoughtspot_URL","updatePrimaryColor","color","hex","updateSecondaryColor","e","target","value","Link"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,mCAAjC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,IAAT,EAAgBC,QAAhB,QAA+B,+BAA/B;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;;;AAGA,SAASC,YAAT,GAAwB;AAAA;;AAExB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,EAAD,CAA1C;AAGA,QAAM2B,eAAe,GAAG,iDAAxB;;AAEAC,EAAAA,kBAAkB,GAAIC,KAAD,IAAW;AAC9BT,IAAAA,eAAe,CAACS,KAAK,CAACC,GAAP,CAAf;AACD,GAFD;;AAGAC,EAAAA,oBAAoB,GAAIF,KAAD,IAAW;AAChCT,IAAAA,eAAe,CAACS,KAAK,CAACC,GAAP,CAAf;AACD,GAFD;;AAIA7B,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEc,GAA1B;AAA+B,MAAA,QAAQ,EAAEiB,CAAC,IAAIhB,MAAM,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEnB,GAA1B;AAA+B,MAAA,QAAQ,EAAEiB,CAAC,IAAIhB,MAAM,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEf,YAArB;AACI,MAAA,gBAAgB,EAAES;AADtB;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,YAAD;AAAc,MAAA,KAAK,EAAET,YAArB;AACI,MAAA,gBAAgB,EAAEY;AADtB;AAAA;AAAA;AAAA;AAAA,YANF,eASE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEhB,GAA1B;AAA+B,MAAA,QAAQ,EAAEiB,CAAC,IAAIhB,MAAM,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAApD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaC;;GApCQpB,Y;;KAAAA,Y;;AAsCT,SAASqB,IAAT,GAAe,CAEd;;MAFQA,I;AAGT,eAAerB,YAAf","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\nimport Editor from './Editor'\nimport Configuration from './Helpers'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { init,  AuthType} from '@thoughtspot/visual-embed-sdk';\nimport { SearchEmbed } from '@thoughtspot/visual-embed-sdk/react';\nimport { SketchPicker } from 'react-color';\n\n\nfunction SettingsMenu() {\n\nconst [URL, setURL] = useState('')\nconst [links, setLinks] = useState('')\nconst [primaryColor, setPrimaryColor] = useState('')\nconst [secondaryColor, setSecondaryColor] = useState('')\nconst [orientation, setOrientation] = useState('')\nconst [logoImage, setLogoImage] = useState('')\n\n\nconst thoughtspot_URL = \"https://se-thoughtspot-cloud.thoughtspot.cloud/\"\n\nupdatePrimaryColor = (color) => {\n  setPrimaryColor(color.hex);\n};\nupdateSecondaryColor = (color) => {\n  setPrimaryColor(color.hex);\n};\n\nuseEffect(() => {\n\n}, [])\n\nreturn (\n  <div id=\"container\">\n    <input type=\"text\" value={URL} onChange={e => setURL(e.target.value)}></input>\n    <input type=\"text\" value={URL} onChange={e => setURL(e.target.value)}></input>\n    <SketchPicker color={primaryColor}\n        onChangeComplete={updatePrimaryColor}\n    />\n    <SketchPicker color={primaryColor}\n        onChangeComplete={updateSecondaryColor}\n    />\n    <input type=\"text\" value={URL} onChange={e => setURL(e.target.value)}></input>  \n  </div>\n)\n}\n\nfunction Link(){\n  \n}\nexport default SettingsMenu;"]},"metadata":{},"sourceType":"module"}