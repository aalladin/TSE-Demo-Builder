{"ast":null,"code":"var _jsxFileName = \"/Users/nathan.schroeder/Documents/dev/TSIntegrationDemo/ts-integration-demo/src/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport { init, AuthType } from '@thoughtspot/visual-embed-sdk';\nimport { SearchEmbed } from '@thoughtspot/visual-embed-sdk/react';\nimport { SketchPicker } from 'react-color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SettingsMenu(props) {\n  _s();\n\n  const {\n    saveSettings,\n    settings\n  } = props;\n  const [URL, setURL] = useState('');\n  const [links, setLinks] = useState('');\n  const [linkTypes, setLinkTypes] = useState('');\n  const [linkNames, setLinkNames] = useState('');\n  const [primaryColor, setPrimaryColor] = useState('');\n  const [secondaryColor, setSecondaryColor] = useState('');\n  const [orientation, setOrientation] = useState('');\n  const [logoImage, setLogoImage] = useState('');\n  const [displayPrimaryPicker, setDisplayPrimaryPicker] = useState('');\n  const [displaySecondaryPicker, setDisplaySecondaryPicker] = useState('');\n\n  function updatePrimaryColor(color) {\n    setPrimaryColor(color.hex);\n  }\n\n  ;\n\n  function updateSecondaryColor(color) {\n    setSecondaryColor(color.hex);\n  }\n\n  ;\n\n  const handleLinkTypeChange = (linkId, value) => {\n    setLinkTypes({ ...linkTypes,\n      [linkId]: value\n    });\n  };\n\n  const handleLinkNameChange = (linkId, value) => {\n    setLinkNames({ ...linkNames,\n      [linkId]: value\n    });\n  };\n\n  const addLink = () => {\n    setLinks([...links, links.length]);\n  };\n\n  const saveSettingMenu = () => {\n    var settings = {\n      URL: URL,\n      links: links,\n      linkTypes: linkTypes,\n      linkNames: linkNames,\n      primaryColor: primaryColor,\n      secondaryColor: secondaryColor,\n      orientation: orientation,\n      logoImage: logoImage\n    };\n    saveSettings(settings);\n  };\n\n  useEffect(() => {\n    setURL(settings.URL);\n    setLinks(settings.links);\n    setLinkTypes(settings.linkTypes);\n    setLinkNames(settings.linkNames);\n    setPrimaryColor(settings.primaryColor);\n    setSecondaryColor(settings.secondaryColor);\n    setOrientation(settings.orientation);\n  }, []);\n  const popover = {\n    position: 'absolute',\n    zIndex: '2'\n  };\n  const cover = {\n    position: 'fixed',\n    top: '0px',\n    right: '0px',\n    bottom: '0px',\n    left: '0px'\n  };\n\n  if (!links) {\n    setLinks([]);\n  } else {\n    var linkObjs = links.map(link => /*#__PURE__*/_jsxDEV(Link, {\n      id: link,\n      saveLinkName: handleLinkNameChange,\n      saveLinkType: handleLinkTypeChange,\n      name: linkNames[link],\n      type: linkTypes[link]\n    }, link, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"settingsContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingLabel\",\n      children: \"Thoughtspot URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: URL,\n      onChange: e => setURL(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingLabel\",\n      children: \"Primary Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colorPlaceholder\",\n      style: {\n        background: primaryColor,\n        border: '1px solid #ccc'\n      },\n      onClick: e => setDisplayPrimaryPicker(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), displayPrimaryPicker ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: popover,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: cover,\n        onClick: () => setDisplayPrimaryPicker(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n        color: primaryColor,\n        onChangeComplete: updatePrimaryColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 30\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingLabel\",\n      children: \"Secondary Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colorPlaceholder\",\n      style: {\n        background: secondaryColor,\n        border: '1px solid #ccc'\n      },\n      onClick: e => setDisplaySecondaryPicker(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), displaySecondaryPicker ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: popover,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: cover,\n        onClick: e => setDisplaySecondaryPicker(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n        color: secondaryColor,\n        onChangeComplete: updateSecondaryColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 32\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingLabel\",\n      children: \"Orientation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setOrientation(e.target.value),\n      value: orientation,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Horizontal\",\n        children: \"Horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Vertical\",\n        children: \"Vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingLabel\",\n      children: \"Links\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this), linkObjs, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: addLink,\n      children: \"Add Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: saveSettingMenu,\n      children: \"Save Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SettingsMenu, \"izl9QmwJ1FIOpP55+MhFLh/vFGE=\");\n\n_c = SettingsMenu;\n\nfunction Link(props) {\n  const {\n    id,\n    name,\n    type,\n    saveLinkName,\n    saveLinkType\n  } = props;\n\n  function handleNameChange(linkName) {\n    saveLinkName(id, linkName);\n  }\n\n  function handleTypeChange(linkType) {\n    saveLinkType(id, linkType);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => handleNameChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleTypeChange(e.target.value),\n      value: type,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"None\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Search\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Liveboard\",\n        children: \"Liveboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Answer\",\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Dropdown\",\n        children: \"Dropdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Link;\nexport default SettingsMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SettingsMenu\");\n$RefreshReg$(_c2, \"Link\");","map":{"version":3,"sources":["/Users/nathan.schroeder/Documents/dev/TSIntegrationDemo/ts-integration-demo/src/Settings.js"],"names":["React","useState","useEffect","setState","init","AuthType","SearchEmbed","SketchPicker","SettingsMenu","props","saveSettings","settings","URL","setURL","links","setLinks","linkTypes","setLinkTypes","linkNames","setLinkNames","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","orientation","setOrientation","logoImage","setLogoImage","displayPrimaryPicker","setDisplayPrimaryPicker","displaySecondaryPicker","setDisplaySecondaryPicker","updatePrimaryColor","color","hex","updateSecondaryColor","handleLinkTypeChange","linkId","value","handleLinkNameChange","addLink","length","saveSettingMenu","popover","position","zIndex","cover","top","right","bottom","left","linkObjs","map","link","e","target","background","border","Link","id","name","type","saveLinkName","saveLinkType","handleNameChange","linkName","handleTypeChange","linkType"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,EAAgBC,QAAhB,QAA+B,+BAA/B;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC7B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;AAMA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AAGA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC2B,oBAAD,EAAuBC,uBAAvB,IAAkD5B,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAAC6B,sBAAD,EAAyBC,yBAAzB,IAAsD9B,QAAQ,CAAC,EAAD,CAApE;;AAEA,WAAS+B,kBAAT,CAA4BC,KAA5B,EAAkC;AAChCZ,IAAAA,eAAe,CAACY,KAAK,CAACC,GAAP,CAAf;AACD;;AAAA;;AACD,WAASC,oBAAT,CAA8BF,KAA9B,EAAoC;AAClCV,IAAAA,iBAAiB,CAACU,KAAK,CAACC,GAAP,CAAjB;AACD;;AAAA;;AAGD,QAAME,oBAAoB,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9CrB,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,OAACqB,MAAD,GAAUC;AAA1B,KAAD,CAAZ;AACD,GAFD;;AAGA,QAAMC,oBAAoB,GAAG,CAACF,MAAD,EAASC,KAAT,KAAmB;AAC9CnB,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,OAACmB,MAAD,GAAUC;AAA1B,KAAD,CAAZ;AACD,GAFD;;AAGA,QAAME,OAAO,GAAG,MAAK;AACnBzB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWA,KAAK,CAAC2B,MAAjB,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAK;AAC1B,QAAI/B,QAAQ,GAAG;AACbC,MAAAA,GAAG,EAAEA,GADQ;AAEbE,MAAAA,KAAK,EAAEA,KAFM;AAGbE,MAAAA,SAAS,EAAEA,SAHE;AAIbE,MAAAA,SAAS,EAAEA,SAJE;AAKbE,MAAAA,YAAY,EAAEA,YALD;AAMbE,MAAAA,cAAc,EAAEA,cANH;AAObE,MAAAA,WAAW,EAAEA,WAPA;AAQbE,MAAAA,SAAS,EAAEA;AARE,KAAf;AAUAhB,IAAAA,YAAY,CAACC,QAAD,CAAZ;AACF,GAZD;;AAaAT,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,MAAM,CAACF,QAAQ,CAACC,GAAV,CAAN;AACAG,IAAAA,QAAQ,CAACJ,QAAQ,CAACG,KAAV,CAAR;AACAG,IAAAA,YAAY,CAACN,QAAQ,CAACK,SAAV,CAAZ;AACAG,IAAAA,YAAY,CAACR,QAAQ,CAACO,SAAV,CAAZ;AACAG,IAAAA,eAAe,CAACV,QAAQ,CAACS,YAAV,CAAf;AACAG,IAAAA,iBAAiB,CAACZ,QAAQ,CAACW,cAAV,CAAjB;AACAG,IAAAA,cAAc,CAACd,QAAQ,CAACa,WAAV,CAAd;AACD,GARQ,EAQN,EARM,CAAT;AASA,QAAMmB,OAAO,GAAG;AACdC,IAAAA,QAAQ,EAAE,UADI;AAEdC,IAAAA,MAAM,EAAE;AAFM,GAAhB;AAIA,QAAMC,KAAK,GAAG;AACZF,IAAAA,QAAQ,EAAE,OADE;AAEZG,IAAAA,GAAG,EAAE,KAFO;AAGZC,IAAAA,KAAK,EAAE,KAHK;AAIZC,IAAAA,MAAM,EAAE,KAJI;AAKZC,IAAAA,IAAI,EAAE;AALM,GAAd;;AAQA,MAAI,CAACpC,KAAL,EAAW;AACTC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD,MAEK;AACH,QAAIoC,QAAQ,GAAKrC,KAAK,CAACsC,GAAN,CAAUC,IAAI,iBAC7B,QAAC,IAAD;AAEE,MAAA,EAAE,EAAEA,IAFN;AAGE,MAAA,YAAY,EAAEd,oBAHhB;AAIE,MAAA,YAAY,EAAEH,oBAJhB;AAKE,MAAA,IAAI,EAAElB,SAAS,CAACmC,IAAD,CALjB;AAME,MAAA,IAAI,EAAErC,SAAS,CAACqC,IAAD;AANjB,OACOA,IADP;AAAA;AAAA;AAAA;AAAA,YADe,CAAjB;AAUD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEzC,GAA1B;AAA+B,MAAA,QAAQ,EAAE0C,CAAC,IAAIzC,MAAM,CAACyC,CAAC,CAACC,MAAF,CAASjB,KAAV;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAACkB,QAAAA,UAAU,EAAEpC,YAAb;AAA2BqC,QAAAA,MAAM,EAAC;AAAlC,OAAzC;AAA8F,MAAA,OAAO,EAAEH,CAAC,IAAIzB,uBAAuB,CAAC,IAAD;AAAnI;AAAA;AAAA;AAAA;AAAA,YAJF,EAKID,oBAAoB,gBAAG;AAAK,MAAA,KAAK,EAAGe,OAAb;AAAA,8BACnB;AAAK,QAAA,KAAK,EAAGG,KAAb;AAAqB,QAAA,OAAO,EAAE,MAAMjB,uBAAuB,CAAC,KAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,cADmB,eAEnB,QAAC,YAAD;AAAc,QAAA,KAAK,EAAET,YAArB;AACI,QAAA,gBAAgB,EAAEY;AADtB;AAAA;AAAA;AAAA;AAAA,cAFmB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAKT,IAVf,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAACwB,QAAAA,UAAU,EAAElC,cAAb;AAA6BmC,QAAAA,MAAM,EAAC;AAApC,OAAzC;AAAgG,MAAA,OAAO,EAAEH,CAAC,IAAIvB,yBAAyB,CAAC,IAAD;AAAvI;AAAA;AAAA;AAAA;AAAA,YAZF,EAaID,sBAAsB,gBAAG;AAAK,MAAA,KAAK,EAAGa,OAAb;AAAA,8BACrB;AAAK,QAAA,KAAK,EAAGG,KAAb;AAAqB,QAAA,OAAO,EAAGQ,CAAC,IAAIvB,yBAAyB,CAAC,KAAD;AAA7D;AAAA;AAAA;AAAA;AAAA,cADqB,eAErB,QAAC,YAAD;AAAc,QAAA,KAAK,EAAET,cAArB;AACI,QAAA,gBAAgB,EAAEa;AADtB;AAAA;AAAA;AAAA;AAAA,cAFqB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAKX,IAlBf,eAmBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE;AAAQ,MAAA,QAAQ,EAAEmB,CAAC,IAAI7B,cAAc,CAAC6B,CAAC,CAACC,MAAF,CAASjB,KAAV,CAArC;AAAuD,MAAA,KAAK,EAAEd,WAA9D;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAwBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,EAyBG2B,QAzBH,eA0BE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAEX,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF,eA2BE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAEE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCC;;GAvHQlC,Y;;KAAAA,Y;;AAyHT,SAASkD,IAAT,CAAcjD,KAAd,EAAoB;AAElB,QAAM;AACJkD,IAAAA,EADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA;AALI,MAMFtD,KANJ;;AAQA,WAASuD,gBAAT,CAA0BC,QAA1B,EAAmC;AACjCH,IAAAA,YAAY,CAACH,EAAD,EAAIM,QAAJ,CAAZ;AACD;;AACD,WAASC,gBAAT,CAA0BC,QAA1B,EAAmC;AACjCJ,IAAAA,YAAY,CAACJ,EAAD,EAAIQ,QAAJ,CAAZ;AACD;;AACD,sBACE;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEP,IAAd;AAAoB,MAAA,QAAQ,EAAEN,CAAC,IAAIU,gBAAgB,CAACV,CAAC,CAACC,MAAF,CAASjB,KAAV;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,QAAQ,EAAEgB,CAAC,IAAIY,gBAAgB,CAACZ,CAAC,CAACC,MAAF,CAASjB,KAAV,CAAvC;AAAyD,MAAA,KAAK,EAAEuB,IAAhE;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;MA5BQH,I;AA6BT,eAAelD,YAAf","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\nimport { init,  AuthType} from '@thoughtspot/visual-embed-sdk';\nimport { SearchEmbed } from '@thoughtspot/visual-embed-sdk/react';\nimport { SketchPicker } from 'react-color';\n\n\nfunction SettingsMenu(props) {\nconst {\n  saveSettings,\n  settings\n} = props\n\n\nconst [URL, setURL] = useState('')\nconst [links, setLinks] = useState('')\nconst [linkTypes, setLinkTypes] = useState('')\nconst [linkNames, setLinkNames] = useState('')\n\n\nconst [primaryColor, setPrimaryColor] = useState('')\nconst [secondaryColor, setSecondaryColor] = useState('')\nconst [orientation, setOrientation] = useState('')\nconst [logoImage, setLogoImage] = useState('')\nconst [displayPrimaryPicker, setDisplayPrimaryPicker] = useState('')\nconst [displaySecondaryPicker, setDisplaySecondaryPicker] = useState('')\n\nfunction updatePrimaryColor(color){\n  setPrimaryColor(color.hex);\n};\nfunction updateSecondaryColor(color){\n  setSecondaryColor(color.hex);\n};\n\n\nconst handleLinkTypeChange = (linkId, value) => {\n  setLinkTypes({ ...linkTypes, [linkId]: value });\n};\nconst handleLinkNameChange = (linkId, value) => {\n  setLinkNames({ ...linkNames, [linkId]: value });\n};\nconst addLink = () =>{\n  setLinks([...links, links.length])\n}\n\nconst saveSettingMenu = () =>{\n   var settings = {\n     URL: URL,\n     links: links,\n     linkTypes: linkTypes,\n     linkNames: linkNames,\n     primaryColor: primaryColor,\n     secondaryColor: secondaryColor,\n     orientation: orientation,\n     logoImage: logoImage\n   }\n   saveSettings(settings)\n}\nuseEffect(() => {\n  setURL(settings.URL)\n  setLinks(settings.links)\n  setLinkTypes(settings.linkTypes)\n  setLinkNames(settings.linkNames)\n  setPrimaryColor(settings.primaryColor)\n  setSecondaryColor(settings.secondaryColor)\n  setOrientation(settings.orientation)\n}, [])\nconst popover = {\n  position: 'absolute',\n  zIndex: '2',\n}\nconst cover = {\n  position: 'fixed',\n  top: '0px',\n  right: '0px',\n  bottom: '0px',\n  left: '0px',\n}\n\nif (!links){\n  setLinks([])\n}else{\n  var linkObjs   = links.map(link => (\n    <Link\n      key={link}\n      id={link}\n      saveLinkName={handleLinkNameChange}\n      saveLinkType={handleLinkTypeChange}\n      name={linkNames[link]}\n      type={linkTypes[link]}\n    />\n  ));\n} \n\nreturn (\n  <div id=\"settingsContainer\">\n    <div className=\"settingLabel\">Thoughtspot URL</div> \n    <input type=\"text\" value={URL} onChange={e => setURL(e.target.value)}></input>\n    <div className=\"settingLabel\">Primary Color</div> \n    <div className=\"colorPlaceholder\" style={{background: primaryColor, border:'1px solid #ccc'}} onClick={e => setDisplayPrimaryPicker(true) }></div>\n    { displayPrimaryPicker ? <div style={ popover }>\n          <div style={ cover } onClick={() => setDisplayPrimaryPicker(false) }/>\n          <SketchPicker color={primaryColor}\n              onChangeComplete={updatePrimaryColor}\n          />\n        </div> : null }\n    <div className=\"settingLabel\">Secondary Color</div> \n    <div className=\"colorPlaceholder\" style={{background: secondaryColor, border:'1px solid #ccc'}} onClick={e => setDisplaySecondaryPicker(true) }></div>\n    { displaySecondaryPicker ? <div style={ popover }>\n          <div style={ cover } onClick={ e => setDisplaySecondaryPicker(false) }/>\n          <SketchPicker color={secondaryColor}\n              onChangeComplete={updateSecondaryColor}\n          />\n        </div> : null }\n    <div className=\"settingLabel\">Orientation</div> \n    <select onChange={e => setOrientation(e.target.value)} value={orientation}> \n        <option value=\"Horizontal\">Horizontal</option>\n        <option value=\"Vertical\">Vertical</option>\n    </select>\n    <div className=\"settingLabel\">Links</div> \n    {linkObjs}\n    <div className=\"button\" onClick={addLink}>Add Link</div>\n    <div className=\"button\" onClick={saveSettingMenu}>Save Settings</div>\n\n  </div>\n)\n}\n\nfunction Link(props){\n\n  const {\n    id,\n    name,\n    type,\n    saveLinkName,\n    saveLinkType\n  } = props\n\n  function handleNameChange(linkName){\n    saveLinkName(id,linkName)\n  }\n  function handleTypeChange(linkType){\n    saveLinkType(id,linkType)\n  }\n  return(\n    <div>\n      <input value={name} onChange={e => handleNameChange(e.target.value)} />\n      <select onChange={e => handleTypeChange(e.target.value)} value={type}> \n        <option value=\"None\">None</option>\n        <option value=\"Search\">Search</option>\n        <option value=\"Liveboard\">Liveboard</option>\n        <option value=\"Answer\">Answer</option>\n        <option value=\"Dropdown\">Dropdown</option>\n      </select>\n    </div>\n  )\n}\nexport default SettingsMenu;"]},"metadata":{},"sourceType":"module"}