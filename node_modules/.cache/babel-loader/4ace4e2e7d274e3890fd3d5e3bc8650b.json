{"ast":null,"code":"var _jsxFileName = \"/Users/nathan.schroeder/Documents/dev/TSIntegrationDemo/ts-integration-demo/src/NotePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NotePopup(props) {\n  _s();\n\n  const [popupVisible, setPopupVisible] = useState('');\n  const [popupConfig, setPopupConfig] = useState('');\n  const [title, setTitle] = useState('');\n  const [value, setValue] = useState('');\n  useEffect(() => {\n    window.addEventListener('popup', function (data) {\n      var dataTitle = '';\n      var dataValue = '';\n\n      if (data.data) {\n        if (data.data.clickedPoint.selectedAttributes.length > 0) {\n          dataValue = data.data.clickedPoint.selectedAttributes[0].value;\n          dataTitle = data.data.clickedPoint.selectedAttributes[0].column.name;\n        }\n\n        if (data.data.clickedPoint.selectedMeasures > 0) {\n          dataValue = data.data.clickedPoint.selectedMeasures[0].value;\n          dataTitle = data.data.clickedPoint.selectedMeasures[0].column.name;\n        }\n      }\n\n      setTitle(dataTitle);\n      setValue(dataValue);\n      setPopupVisible(true);\n    });\n  }, []);\n\n  function saveButton() {}\n\n  function togglePopupVisible() {\n    setPopupVisible(false);\n  }\n\n  var disp = popupVisible ? 'flex' : 'none';\n  var style = {\n    display: disp,\n    position: 'absolute',\n    top: '35%',\n    left: '35%',\n    height: '400px',\n    width: '300px',\n    flexDirection: 'column',\n    padding: '15px',\n    background: 'var(--primary-color)',\n    boxShadow: '0px 0px 150px #efefef'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: togglePopupVisible,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: saveButton,\n      children: \"Save Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NotePopup, \"Y7CrciiWxWhCe/dy7Ed8wHTdN2s=\");\n\n_c = NotePopup;\nexport default NotePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePopup\");","map":{"version":3,"sources":["/Users/nathan.schroeder/Documents/dev/TSIntegrationDemo/ts-integration-demo/src/NotePopup.js"],"names":["React","useState","useEffect","setState","NotePopup","props","popupVisible","setPopupVisible","popupConfig","setPopupConfig","title","setTitle","value","setValue","window","addEventListener","data","dataTitle","dataValue","clickedPoint","selectedAttributes","length","column","name","selectedMeasures","saveButton","togglePopupVisible","disp","style","display","position","top","left","height","width","flexDirection","padding","background","boxShadow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\n\nfunction NotePopup(props){\n\n\n    const [popupVisible,setPopupVisible] = useState('')\n    const [popupConfig,setPopupConfig] = useState('')\n    const [title,setTitle] = useState('')\n    const [value,setValue] = useState('')\n\n    useEffect(() => {\n        window.addEventListener('popup', function(data){\n            var dataTitle = ''\n            var dataValue = ''\n            if (data.data){\n                if (data.data.clickedPoint.selectedAttributes.length > 0){\n                    dataValue = data.data.clickedPoint.selectedAttributes[0].value\n                    dataTitle = data.data.clickedPoint.selectedAttributes[0].column.name\n                }\n                if (data.data.clickedPoint.selectedMeasures > 0){\n                    dataValue = data.data.clickedPoint.selectedMeasures[0].value\n                    dataTitle = data.data.clickedPoint.selectedMeasures[0].column.name\n                }\n            }\n            setTitle(dataTitle)\n            setValue(dataValue);\n            setPopupVisible(true);\n        })\n      }, [])\n    function saveButton(){\n\n    }\n    function togglePopupVisible(){\n        setPopupVisible(false)\n    }\n    var disp = popupVisible ? 'flex' : 'none';\n\n    var style = {\n        display:disp,\n        position:'absolute',\n        top:'35%',\n        left:'35%',\n        height:'400px',\n        width:'300px',\n        flexDirection:'column',\n        padding:'15px',\n        background:'var(--primary-color)',\n        boxShadow:'0px 0px 150px #efefef'\n    }\n    return (\n        <div style={style}>\n            <div onClick={togglePopupVisible}>X</div>\n            <div>{title}</div>\n            <div>{value}</div>\n            <div onClick={saveButton}>Save Note</div>\n        </div>\n    )\n}\nexport default NotePopup;"]},"metadata":{},"sourceType":"module"}