{"ast":null,"code":"var _jsxFileName = \"/Users/nathan.schroeder/Documents/dev/ts-integration-demo/src/advanced_demo/DataObjView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport D3Chart from './D3Chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DataObjView(props) {\n  _s();\n\n  const {\n    worksheet\n  } = props;\n  const [dataObj, setDataObj] = useState('');\n  const [queryString, setQueryString] = useState('');\n  const [chartFilter, setChartFilter] = useState('');\n\n  function getData(newQueryString) {\n    var queryStr = newQueryString ? newQueryString : queryString;\n\n    if (queryStr) {\n      var query = chartFilter ? queryStr + \"'\" + chartFilter + \"' \" : queryStr;\n      var url = \"https://se-thoughtspot-cloud.thoughtspot.cloud/callosum/v1/tspublic/v1/searchdata?query_string=\" + encodeURIComponent(query) + \"&data_source_guid=\" + worksheet + \"&batchsize=-1&pagenumber=-1&offset=-1&formattype=COMPACT\";\n      fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        credentials: 'include'\n      }).then(response => response.json()).then(data => {\n        setDataObj(data);\n\n        if (newQueryString) {\n          setQueryString(newQueryString);\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('chartFilter', function (e) {\n      console.log(\"chart Fil111\", e.detail.name);\n      setChartFilter(e.detail.name, getData(null));\n    });\n    window.addEventListener('popup', function (e) {\n      var newQueryString = e.detail.data;\n      getData(newQueryString);\n    });\n  }, []);\n\n  if (!dataObj) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        boxShadow: '0px 0px 5px #e0e0e0',\n        minHeight: '250px',\n        maxHeight: '250px'\n      },\n      children: \"Search Data Will go Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n  var ths = [];\n\n  for (var idx in dataObj.columnNames) {\n    ths.push( /*#__PURE__*/_jsxDEV(\"th\", {\n      children: dataObj.columnNames[idx]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this));\n  }\n\n  var data = dataObj.data;\n\n  if (data) {\n    var trs = [];\n\n    for (var row of data) {\n      var tds = [];\n\n      for (var col of row) {\n        tds.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: col\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 26\n        }, this));\n      }\n\n      trs.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: tds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 22\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '250px',\n      maxHeight: '250px',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: ths\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: trs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(D3Chart, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DataObjView, \"RDMGCZtnhSOonbTmOIUF4XCJFEQ=\");\n\n_c = DataObjView;\nexport default DataObjView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataObjView\");","map":{"version":3,"sources":["/Users/nathan.schroeder/Documents/dev/ts-integration-demo/src/advanced_demo/DataObjView.js"],"names":["React","useState","useEffect","setState","D3Chart","DataObjView","props","worksheet","dataObj","setDataObj","queryString","setQueryString","chartFilter","setChartFilter","getData","newQueryString","queryStr","query","url","encodeURIComponent","fetch","headers","method","credentials","then","response","json","data","window","addEventListener","e","console","log","detail","name","display","justifyContent","alignItems","boxShadow","minHeight","maxHeight","ths","idx","columnNames","push","trs","row","tds","col","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\nimport D3Chart from './D3Chart.js'\nfunction DataObjView(props){\n    const {\n        worksheet\n    } = props\n    const [dataObj, setDataObj] = useState('')\n    const [queryString, setQueryString] = useState('')\n    const [chartFilter,setChartFilter] = useState('')\n    function getData(newQueryString){\n        var queryStr = newQueryString ? newQueryString : queryString\n        if (queryStr){\n            var query = chartFilter ? queryStr +  \"'\" + chartFilter + \"' \" : queryStr\n            var url = \"https://se-thoughtspot-cloud.thoughtspot.cloud/callosum/v1/tspublic/v1/searchdata?query_string=\"+encodeURIComponent(query)+\n            \"&data_source_guid=\"+worksheet+\"&batchsize=-1&pagenumber=-1&offset=-1&formattype=COMPACT\"\n            fetch(url,\n            {\n                headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n                method:'POST',\n                credentials: 'include',\n            })\n            .then(response => response.json()).then(\n                data => {\n                    setDataObj(data)\n                    if (newQueryString){\n                        setQueryString(newQueryString)\n                    }\n            })\n        }\n    }\n    useEffect(() => {\n        window.addEventListener('chartFilter', function(e){\n            console.log(\"chart Fil111\",e.detail.name)\n            setChartFilter(e.detail.name, getData(null))\n            \n        })\n        window.addEventListener('popup', function(e){\n            var newQueryString = e.detail.data\n            getData(newQueryString)\n\n        })\n    },[])\n    if (!dataObj){\n        return (\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',boxShadow:'0px 0px 5px #e0e0e0', minHeight:'250px',maxHeight:'250px'}}>Search Data Will go Here</div>\n        )\n    }\n    var ths = []\n    for (var idx in dataObj.columnNames){\n        ths.push(<th>{dataObj.columnNames[idx]}</th>)\n    }\n    var data = dataObj.data\n    if (data){\n        var trs = []\n        for (var row of data){\n            var tds = []\n            for (var col of row){\n                tds.push(<td>{col}</td>)\n            }\n            trs.push(<tr>{tds}</tr>)\n        }\n    }\n\n\n    return (\n        <div style={{minHeight:'250px',maxHeight:'250px',display:'flex',flexDirection:'row'}}>\n            <table>\n                <thead>\n                    {ths}\n                </thead>\n                <tbody>\n                    {trs}\n                </tbody>\n            </table>\n            <D3Chart data={data}></D3Chart>\n\n        </div>\n    )\n}\nexport default DataObjView;"]},"metadata":{},"sourceType":"module"}