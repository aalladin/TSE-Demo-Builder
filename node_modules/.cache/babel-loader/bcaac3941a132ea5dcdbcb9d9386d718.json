{"ast":null,"code":"var _jsxFileName = \"/Users/nathan.schroeder/Documents/dev/TSIntegrationDemo/ts-integration-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Switch, Route, Link } from \"react-router-dom\";\nimport Settings from './Settings';\nimport Content from './Content';\nimport React, { useState, useEffect, setState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APP_VERSION = '1.0.0';\n\nfunction App() {\n  _s();\n\n  const [settings, setSettings] = useState('');\n  const [settingsVisible, setSettingsVisible] = useState('');\n\n  function applySettings(settings) {\n    setSettings(settings);\n  }\n\n  function saveSettings(settings) {\n    console.log(settings);\n    var a = document.getElementById(\"saveButton\");\n    var file = new Blob([JSON.stringify(settings)], {\n      type: 'json'\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = settings.name + APP_VERSION;\n  }\n\n  function closeSettings(settings) {\n    setSettingsVisible(false);\n  }\n\n  function showSettings() {\n    setSettingsVisible(true);\n  }\n\n  const openSettings = file => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(file);\n\n    fileReader.onload = () => {\n      var settings = JSON.parse(fileReader.result);\n      console.log(settings);\n      setSettings(settings);\n    };\n  };\n\n  const popover = {\n    position: 'absolute',\n    zIndex: '2',\n    top: 50,\n    left: 300,\n    width: '600px',\n    height: '600px',\n    background: '#ffffff',\n    boxShadow: '0px 0px 250px #ededed',\n    padding: '25px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Content, {\n      settings: settings,\n      showSettings: showSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), settingsVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: popover,\n      children: /*#__PURE__*/_jsxDEV(Settings, {\n        openSettings: openSettings,\n        applySettings: applySettings,\n        saveSettings: saveSettings,\n        settings: settings,\n        closeSettings: closeSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ISrrcFxTYJHhru9LWW4hPbRBQwY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nathan.schroeder/Documents/dev/TSIntegrationDemo/ts-integration-demo/src/App.js"],"names":["logo","BrowserRouter","Router","Routes","Switch","Route","Link","Settings","Content","React","useState","useEffect","setState","APP_VERSION","App","settings","setSettings","settingsVisible","setSettingsVisible","applySettings","saveSettings","console","log","a","document","getElementById","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","name","closeSettings","showSettings","openSettings","fileReader","FileReader","readAsText","onload","parse","result","popover","position","zIndex","top","left","width","height","background","boxShadow","padding"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Switch,\n  Route,\n  Link,\n  \n} from \"react-router-dom\";\nimport Settings from './Settings'\nimport Content from './Content'\nimport React, { useState, useEffect, setState } from 'react';\n\nconst APP_VERSION = '1.0.0'\n\n\nfunction App() {\n  const [settings, setSettings] = useState('')\n  const [settingsVisible, setSettingsVisible] = useState('')\n\n  function applySettings(settings){\n    setSettings(settings)\n  }\n  function saveSettings(settings){\n    console.log(settings)\n    var a = document.getElementById(\"saveButton\");\n    var file = new Blob([JSON.stringify(settings)], {type: 'json'});\n    a.href = URL.createObjectURL(file);\n    a.download = settings.name+APP_VERSION;\n  }\n  function closeSettings(settings){\n    setSettingsVisible(false)\n  }\n  function showSettings(){\n    setSettingsVisible(true);\n  }\n\n  const openSettings = (file) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(file)\n    fileReader.onload = () => {\n      var settings = JSON.parse(fileReader.result)\n      console.log(settings)\n      setSettings(settings);\n    }\n\n  }  \n\n  const popover = {\n    position: 'absolute',\n    zIndex: '2',\n    top:50,\n    left:300,\n    width:'600px',\n    height:'600px',\n    background:'#ffffff',\n    boxShadow: '0px 0px 250px #ededed',\n    padding:'25px'\n  }\n  return(\n    <div>\n      <Content settings={settings} showSettings={showSettings} />\n      { settingsVisible ? <div style={ popover }>\n    <Settings openSettings={openSettings} applySettings={applySettings} saveSettings={saveSettings} settings={settings} closeSettings={closeSettings}/>  \n  </div> : null }\n          \n    </div>\n\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}